{"name":"Eztables","tagline":"Simple yet powerful firewall configuration for Linux.","body":"# Eztables\r\n\r\nEztables allows you to quickly configure a firewall without ever touching iptables. The firewall rule syntax is designed to be easy to read and to apply.  \r\n\r\nThis is how you allow the entire internet to access your webserver on tcp-port 80:\r\n\r\n```sh\r\n\tallow_in any $eth0 any 80/tcp\r\n``` \r\n\r\nEztables is designed to be simple, yet powerful. It doesn't matter if you want to protect your laptop, are setting up a home router, or use it to setup a corporate firewall. \r\n\r\n# Features\r\n\r\n* Basic input / output filtering\r\n* Network address translation (NAT)\r\n* Port address translation (PAT)\r\n* Support for VLANs\r\n* Working with Groups / Objects to aggregate hosts and services\r\n* Logging to syslog\r\n* Support for plugins\r\n* Automatically detects all network interfaces\r\n\r\n# Why should I consider using Eztables?\r\n\r\nEztables has it's own firewall rule syntax that is significantly simpler than using iptables directly. A tool like [UFW](https://help.ubuntu.com/community/UFW) was made with a similar mindset, but it is more host-centric. It was never designed to be used as a general-purpose firewall script.\r\n\r\nEztables on the other hand, can be used on any Linux box, wether it's a desktop, (virtual) server or network firewall. \r\n \r\nEztables has support for advanced features like NAT and port-forwarding. But one of the most powerfull features is support for object groups, as found in most commercial firewalls and routers. Object groups are cool because they allow you to group hosts in 'objects' and refer to those objects in your rules. This allows you to keep the number of firewall rules relatively small and comprehensible.\r\n\r\n# Example: basic network \r\n\r\nWith these two configuration lines, you can setup a functional home router. \r\n\r\n```sh\r\n    nat $eth1_net $eth0\r\n    allow_forward $eth1_net any any any\r\n```\r\n\r\nThat's easy right? It's just two lines because Eztables can detect all network interfacesalso determine which one is connected to the internet (eth0).\r\n\r\nThis rule will allow SSH access to this router/firewall.\r\n\r\n```sh\r\n    allow_in $eth1_net $eth1 any 22/tcp\r\n```\r\n\r\nNote that SSH access is only granted from within the local network connected to the eth1 interface..\r\n\r\nIf you also run a DHCP-server on this box, you need to allow clients acces with these rules:\r\n\r\n```sh\r\n\tallow_in any $eth1 any $DHCP\" \"$DHCP\"\r\n\tallow_out \"$eth1\" any \"$DHCP\" \"$DHCP\"\r\n```\r\n\r\nThe \"$DHCP\" variable should look like this:\r\n\r\n```sh\r\n\tDHCP=\"\r\n\t    67/udp\r\n\t    68/udp\r\n\t\"\r\n```\r\n\r\nYou may have to setup additional rules if you run a local DNS server or a [proxy server](http://louwrentius.com/setting-up-a-squid-proxy-with-clamav-anti-virus-using-c-icap.html)\r\n\r\n## Working with object groups\r\n\r\nA main advantage of Eztables over other solutions is the possibility to define and use groups or objects. This is a feature commonly found on all commercial firewall products. \r\n\r\nWorking with object groups allows you to keep your firewall ruleset small and simple. Let's take a look at the use of objects and groups.\r\n\r\n```sh\r\n    HTTP_SERVICES=\"\r\n        80/tcp\r\n       443/tcp\r\n    \"\r\n\r\n    WEB_SERVER_1=192.168.0.10\r\n    WEB_SERVER_2=192.168.0.20\r\n    WEB_SERVER_3=192.168.0.30\r\n\r\n    WEB_SERVERS=\"\r\n        $WEB_SERVER_1\r\n        $WEB_SERVER_2\r\n        $WEB_SERVER_3\r\n    \"\r\n\r\n    allow_in any \"$WEB_SERVERS\" any \"$HTTP_SERVICES\"\r\n```\r\n\r\nSo object groups allow you to define firewall rules in a more abstract form, which is easy to maintain and to expand upon.\r\n\r\nYou can even nest objects. For example, you can define an object $BASIC_SERVICES that contains the objects $DNS $HTTP_SERVICES and $NTP. \r\n\r\n## Installation\r\n\r\nRun the install.sh file like:\r\n\r\n    bash install.sh\r\n\r\nAfter that, review the configuration file: /etc/eztables/eztables.cfg\r\n\r\nStart the firewall like this:\r\n\r\n    /etc/init.d/eztables start\r\n\r\nBe carefull not to lock yourself out if you test your rules.\r\n\r\n    /etc/init.d/eztables start && sleep 30 && /etc/init.d/eztables stop\r\n\r\n## Roadmap\r\n\r\n- Traffic shaping plugin\r\n- IPv6 support\r\n- Support for multi-homed networks\r\n- See the issue section for more \r\n","google":"UA-5175176-11","note":"Don't delete this file! It's used internally to help with page regeneration."}